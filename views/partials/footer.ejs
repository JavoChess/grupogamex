
    <footer class="my-3 pt-3 text-muted text-center text-small">
        <p class="mb-1">&copy; <%= new Date().getFullYear() %> grupogamex</p>
        <ul class="list-inline">
            <li class="list-inline-item"><a href="#">Privacy</a></li>
            <li class="list-inline-item"><a href="#">Terms</a></li>
            <li class="list-inline-item"><a href="#">Support</a></li>
        </ul>
    </footer>


    <!-- JavaScript JQuery -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <!-- JavaScript Boostrap 5 -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>


    <!-- luxon (Tabulator) -->
    <script src="https://cdn.jsdelivr.net/npm/luxon/build/global/luxon.min.js"></script>		
    <!-- Tabulator -->
    <script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.2.3/dist/js/tabulator.min.js"></script>

    <script type="text/javascript">

        let tabledata = <%- JSON.stringify(tabledata) %>; 
        let vistaUsuarios = <%- JSON.stringify(vistaUsuarios) %>; 
        let vistaMateriales = <%- JSON.stringify(vistaMateriales) %>; 
        
        let table = new Tabulator("#tabla-usuarios", { 
            height: 380, // set height of table to enable virtual DOM
            data: tabledata, //load initial data into table
            layout: "fitColumns", //fit columns to width of table (optional)
            pagination: "local",       //paginate the data
            paginationSize: 10,         //allow 7 rows per page of data
            paginationCounter: "rows", //display count of paginated rows in footer
            columns:[ //Define Table Columns
                {title:"Nombre",          field:"nombre", sorter:"string", width:150},
                {title:"Apellido",        field:"apellido",  sorter:"string", hozAlign:"left"},
                {title:"Usuario",         field:"usuario",  sorter:"string", headerSort:false},
                {title:"Tipo",            field:"tipo_usuario",  sorter:"string",   hozAlign:"left"},
            ],
        });
        
        let tabledata2 = <%- JSON.stringify(tabledata2) %>; 
        
        // nombre, codigo, tipo_producto, marca, cliente, proveedor, almacen, clasif_almacen, estatus

        //Generate print icon
        let iconoElimina = function(cell, formatterParams){ //plain text value
            //return "<i class='bi bi-trash3'></i>";
            return "<span class='material-icons md-dark md-inactive md-18'>remove</span>";
        };

        let iconoEdita = function(cell, formatterParams){ //plain text value
            return "<span class='material-icons md-dark md-inactive md-18'>edit</span>";
        };

        let iconoGuarda = function(cell, formatterParams){ //plain text value
            return "<span class='material-icons md-dark md-inactive md-18'>save</span>";
        };

        let table2 = new Tabulator("#tabla-materiales", { 
            height: 380,               // set height of table to enable virtual DOM
            data: tabledata2,          //load initial data into table
            history: true,             //allow undo and redo actions on the table
            //selectable:true,           //make rows selectable
            pagination: "local",       //paginate the data
            paginationSize: 10,        //allow 7 rows per page of data
            paginationCounter: "rows", //display count of paginated rows in footer
            keybindings:{
                        "redo" : "ctrl + r", //bind redo function to ctrl + r
                        },
            columns: [ //Define Table Columns
                {title:"Id",              field:"material_id",    sorter:"string",   hozAlign:"left"},
                {title:"Nombre",          field:"nombre",         sorter:"string",   hozAlign:"left", editor: true},
                {title:"Código",          field:"codigo",         sorter:"string",   hozAlign:"left", editor: true},
                {title:"Tipo producto",   field:"tipo_producto",  sorter:"string",   hozAlign:"left", editor: true},
                {title:"Marca",           field:"marca",          sorter:"string",   hozAlign:"left", editor: true},
                {title:"Cliente",         field:"cliente",        sorter:"string",   hozAlign:"left", editor: true},
                {title:"Proveedor",       field:"proveedor",      sorter:"string",   hozAlign:"left", editor: true},
                {title:"Almacén",         field:"almacen",        sorter:"string",   hozAlign:"left", editor: true, editor:"list", editorParams:{values:["1", "2"]}},
                {title:"Clasif. Almacén", field:"clasif_almacen", sorter:"string",   hozAlign:"left", editor: true, editor:"list", editorParams:{values:["A", "B", "C"]}},
                {title:"Estatus",         field:"estatus",        sorter:"string",   hozAlign:"left", editor: true, editor:"list", editorParams:{values:["Activo", "Inactivo"]}},
                {formatter:iconoElimina, width:40, hozAlign:"center", cellClick:function(e, cell) { 
                            
                            const id = cell.getRow().getData().material_id;
                            let ejecutar = confirm("Se va a eliminar el registro: " + id);

                            if (ejecutar) {
                                // https://codeforgeek.com/handle-get-post-request-express-4/
                                $.post("/materiales/eliminar/" + id, {}, function(data) {
                                    if(data === 'eliminado') { 
                                        alert("Se eliminó el registro.");
                                        location.reload();
                                    }
                                });
                                
                            } 
                    }
                },
                {formatter:iconoEdita, width:40, hozAlign:"center", cellClick:function(e, cell) {
                            const id = cell.getRow().getData().material_id;
                            const valores = cell.getRow().getData();
                            let ejecutar = confirm("Se va a editar el registro: " + id);
                            if (ejecutar) {
                                // https://codeforgeek.com/handle-get-post-request-express-4/

                                $.post("/materiales/editar/" + id, valores, function(data) {
                                    if(data === 'editado') { 
                                        alert("Se editó el registro.");
                                        location.reload();
                                    }
                                });
                                
                            } 
                    
                    }
                },
                {formatter:iconoGuarda, width:40, hozAlign:"center", cellClick:function(e, cell) {
                            
                        const valores = cell.getRow().getData();
                        if (valores.material_id === 0) { 

                            delete valores.material_id;
                            Object.keys(valores).forEach(function(key, index) {
            
                                if (typeof valores[key] == 'undefined') {
                                    valores[key]="";
                                }
                            });
                            /* console.log(valores); */
                            
                            let ejecutar = confirm("Se va a guardar el nuevo registro ");
                            if (ejecutar) {
                                $.post("/materiales/guardar/", valores, function(data) {
                                    if(data === 'Registro correcto') { 
                                        alert("Se guardó el registro.");
                                        location.reload();
                                    }
                                });
                                
                            } 
                        }
                    }
                },
                
            ],
        }); 
        
        // ------------------------------
        // table1
        // ------------------------------



        
        // ------------------------------
        // table2
        // ------------------------------

        // SELECCION DE UN ELELEMTO
        // Guarda el Id del registro seleccionado
        let table2ItemSeleccionado=0;

        table2.on("rowSelected", function(row) {
            table2ItemSeleccionado = row._row.data.material_id;
            $("#tabla-materiales-lower-label").html("Selección: " + table2ItemSeleccionado);
        });
        
        table2.on("rowSelectionChanged", function(data, rows) {
            //document.getElementById("#tabla-materiales-lower-label").innerHTML = data.length;
            if (data.length === 0 ) {
                table2ItemSeleccionado = 0;
                $("#tabla-materiales-lower-label").html("Selección: " + table2ItemSeleccionado);
            }
        });

        
        // agrega Fila en table2
        $("#materiales-nuevo").click(function() { 
            // Tendrias que generar el nuevo Id en la DB, y cuardarlo en nuevoId
            const nuevoId = 0;
            table2.addRow( {material_id: nuevoId }, true);
        });
        
        

    </script>

    <!-- para el boton responsive del nav-var -->
    <script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js" integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE" crossorigin="anonymous"></script>

</body>
</html>
